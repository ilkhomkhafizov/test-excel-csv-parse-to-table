{"version":3,"sources":["actions/constants.js","mocks/ListSurveys.js","services/api.service.js","actions/actions.js","reducers/reducer.js","reducers/index.js","store/index.js","components/Table/CellUncontrolled.js","components/Table/SelectSurvey.js","components/Table/Cell.js","components/Table/Headers.js","components/Table/Row.js","components/Table/Body.js","utils/index.js","components/Table/Table.js","components/App/App.jsx","index.js"],"names":["ADD_COLUMN","DELETE_COLUMN","ADD_ROW","DELETE_ROW","UPDATE_CELL","SET_TABLE","VALIDATE_CELLS","PARSE_CELLS","LIST_SURVEYS","id","Math","random","name","request","action","Promise","resolve","response","listSurveysResponse","addRow","after","type","getNewCell","value","readOnly","cell","initialState","headers","rows","surveys","combineReducers","table","state","newHeader","headersLeft","slice","headersRight","map","row","newRowCell","left","right","column","cellsLeft","cellsRight","newColumns","h","isSurvey","length","newRow","rowsBefore","rowsAfter","JSON","parse","stringify","i","body","newHeaders","newRows","find","e","tmp","push","validate","isValid","updatedCell","errors","Array","isArray","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","TableCellUncontrolled","props","target","this","setState","onChange","readOnlyClass","className","bind","onBlur","disabled","React","Component","SelectSurvey","defaultValue","survey","label","Option","selected","connect","Cell","lastKey","mouseOver","onTab","onKeyDown","onMouseEnter","onMouseLeave","onCellChange","isLastCell","onAddRow","key","onAddColumn","onDeleteColumn","onDeleteRow","isHeader","showAddColumnBtn","showDeleteColumnBtn","showDeleteRowBtn","hasErrors","mapDispatchToProps","DeleteRow","onClick","DeleteColumn","AddColumn","IconPlus","IconTimes","Headers","j","Row","cells","isLastRow","Body","ExcelFileInput","handleFile","file","reader","FileReader","rABS","readAsBinaryString","onload","result","wb","XLSX","read","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","header","setTable","readAsArrayBuffer","dispatch","DataInput","handleChange","fileInput","createRef","files","style","marginLeft","current","click","ref","hidden","accept","SheetJSFT","x","join","Table","App","initialiseTable","then","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.672dde3d.chunk.js","sourcesContent":["export const ADD_COLUMN = \"ADD_COLUMN\";\r\nexport const DELETE_COLUMN = \"DELETE_COLUMN\";\r\nexport const ADD_ROW = \"ADD_ROW\";\r\nexport const DELETE_ROW = \"DELETE_ROW\";\r\nexport const UPDATE_CELL = \"UPDATE_CELL\";\r\nexport const SET_HEADERS = \"SET_HEADERS\";\r\nexport const SET_BODY = \"SET_BODY\";\r\nexport const SET_TABLE = \"SET_TABLE\";\r\nexport const VALIDATE_CELLS = \"VALIDATE_CELLS\";\r\nexport const PARSE_CELLS = \"PARSE_CELLS\";\r\nexport const LIST_SURVEYS = \"LIST_SURVEYS\";\r\nexport const CREATE_PATIENTS_AND_SEND_SURVEYS = \"CREATE_PATIENTS_AND_SEND_SURVEYS\";\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n    {\r\n      id: Math.random(),\r\n      name: \"Post Op\"\r\n    }\r\n];\r\n  ","import listSurveysResponse from \"../mocks/ListSurveys\";\r\n\r\nexport const request = action => {\r\n  switch (action) {\r\n    case \"LIST_SURVEYS\": {\r\n      return Promise.resolve({ response: listSurveysResponse });\r\n    }\r\n    default:\r\n      return Promise.resolve({});\r\n  }\r\n};\r\n","import { request } from './../services/api.service';\r\nimport {ADD_COLUMN, \r\n        DELETE_COLUMN, \r\n        ADD_ROW, \r\n        DELETE_ROW, \r\n        UPDATE_CELL,\r\n        SET_HEADERS,\r\n        SET_BODY,\r\n        SET_TABLE,\r\n        VALIDATE_CELLS,\r\n        PARSE_CELLS,\r\n        LIST_SURVEYS} from \"./constants\"\r\n\r\nexport const addColumn = after => ({ type: ADD_COLUMN, after });\r\nexport const deleteColumn = column => ({ type: DELETE_COLUMN, column });\r\nexport const addRow = after => ({ type: ADD_ROW, after });\r\nexport const deleteRow = row => ({ type: DELETE_ROW, row });\r\nexport const updateCell = (row, column, value) => ({\r\n  type: UPDATE_CELL,\r\n  row,\r\n  column,\r\n  value\r\n});\r\nexport const setHeaders = headers => ({ type: SET_HEADERS, headers });\r\nexport const setBody = body => ({ type: SET_BODY, body });\r\nexport const setTable = rows => dispatch => {\r\n  dispatch({ type: SET_TABLE, rows });\r\n};\r\nexport const validateCells = () => ({ type: VALIDATE_CELLS });\r\nexport const parseCells = () => ({ type: PARSE_CELLS });\r\n\r\nexport const listSurveys = () => dispatch => {\r\n  return request(LIST_SURVEYS).then(({ response }) =>\r\n    dispatch({ type: LIST_SURVEYS, surveys: response })\r\n  );\r\n};\r\n\r\nexport const createPatientsAndSendSurveys = () => dispatch => {\r\n  return dispatch(validateCells());\r\n};\r\n\r\nexport const initialiseTable = () => dispatch => {\r\n  return request(LIST_SURVEYS)\r\n    .then(({ response }) => dispatch({ type: LIST_SURVEYS, surveys: response }))\r\n    .then(() => dispatch(addRow()));\r\n};\r\n\r\nexport const getNewCell = ({ value = \"\", readOnly = null, type = \"text\" } = {}) => {\r\n  const cell = {\r\n    id: Math.random(),\r\n    type,\r\n    value,\r\n    readOnly: false\r\n  };\r\n\r\n  if (readOnly !== null) {\r\n    cell.readOnly = readOnly;\r\n  }\r\n  return cell;\r\n};\r\n\r\n","import {\r\n    ADD_COLUMN, \r\n    DELETE_COLUMN, \r\n    ADD_ROW, \r\n    DELETE_ROW, \r\n    UPDATE_CELL,\r\n    SET_TABLE,\r\n    VALIDATE_CELLS,\r\n    PARSE_CELLS,\r\n    LIST_SURVEYS\r\n} from \"../actions/constants\"\r\n\r\nimport {getNewCell} from \"../actions/actions\"\r\n\r\nconst initialState = {\r\n    headers: [],\r\n    rows: [],\r\n    surveys: []\r\n};\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case ADD_COLUMN:\r\n        const { after } = action;\r\n        const newHeader = getNewCell();\r\n        // add new header cell to existing header row\r\n        const headersLeft = [...state.headers].slice(0, after + 1);\r\n        const headersRight = [...state.headers].slice(after + 1);\r\n        const headers = [...headersLeft, newHeader, ...headersRight];\r\n        // add new column to existing rows\r\n        const rows = state.rows.map(row => {\r\n          const newRowCell = getNewCell();\r\n          const left = [...row].slice(0, after + 1);\r\n          const right = [...row].slice(after + 1);\r\n          const newRow = [...left, newRowCell, ...right];\r\n          return newRow;\r\n        });\r\n  \r\n        return { ...state, headers, rows };\r\n      case DELETE_COLUMN: {\r\n        const { column = 0 } = action;\r\n        const headersLeft = [...state.headers].slice(0, column);\r\n        const headersRight = [...state.headers].slice(column + 1);\r\n        const headers = [...headersLeft, ...headersRight];\r\n  \r\n        const rows = state.rows.map(row => {\r\n          const cellsLeft = [...row].slice(0, column);\r\n          const cellsRight = [...row].slice(column + 1);\r\n          return [...cellsLeft, ...cellsRight];\r\n        });\r\n  \r\n        return {\r\n          ...state,\r\n          headers,\r\n          rows\r\n        };\r\n      }\r\n      case ADD_ROW: {\r\n        const { after = 0 } = action;\r\n        const newColumns = state.headers.map(h => {\r\n          const isSurvey = h.value === \"Survey\";\r\n          const type = isSurvey ? \"survey\" : \"text\";\r\n          const value =\r\n            isSurvey && state.surveys.length === 1 ? state.surveys[0].name : \"\";\r\n          return getNewCell({ type, value });\r\n        });\r\n        const newRow = [newColumns];\r\n        const rowsBefore = [...state.rows].slice(0, after);\r\n        const rowsAfter = [...state.rows].slice(after);\r\n        const rows = [...rowsBefore, ...newRow, ...rowsAfter];\r\n        return { ...state, rows };\r\n      }\r\n      case DELETE_ROW: {\r\n        const { row } = action;\r\n        const rowsBefore = [...state.rows].slice(0, row);\r\n        const rowsAfter = [...state.rows].slice(row + 1);\r\n        return { ...state, rows: [...rowsBefore, ...rowsAfter] };\r\n      }\r\n      case UPDATE_CELL: {\r\n        const { row, column, value } = action;\r\n  \r\n        // update cell\r\n        if (typeof row !== \"undefined\") {\r\n          const rows = JSON.parse(JSON.stringify(state.rows));\r\n          rows[row][column].value = value;\r\n          // const rows = state.rows.map((r, i) => {\r\n          //   return r.map((cell, j) => {\r\n          //     if (i === row && j === column) {\r\n          //       cell.value = value;\r\n          //     }\r\n          //     return cell;\r\n          //   });\r\n          // });\r\n          return { ...state, rows };\r\n        }\r\n  \r\n        // update header\r\n        const headers = state.headers.map((h, i) => {\r\n          if (i === column) {\r\n            h.value = value;\r\n          }\r\n          return h;\r\n        });\r\n        return { ...state, headers };\r\n      }\r\n      case SET_TABLE: {\r\n        const { rows } = action;\r\n        const headers = rows[0];\r\n        const body = rows.slice(1);\r\n        // set headers\r\n        const newHeaders = headers.map((h, i) => getNewCell({ value: h }));\r\n        // add First Name column if not present\r\n        const hasFirstNameColumn = newHeaders.find(e => e.value === \"First Name\");\r\n        // if (!hasFirstNameColumn) {\r\n        //   newHeaders.push(getNewCell({ value: \"First Name\", readOnly: true }));\r\n        // }\r\n        // add Mobile column if not present\r\n        const hasMobileColumn = newHeaders.find(e => e.value === \"Mobile\");\r\n        // if (!hasMobileColumn) {\r\n        //   newHeaders.push(getNewCell({ value: \"Mobile\", readOnly: true }));\r\n        // }\r\n        // add Survey column if not present\r\n        const hasSurveyColumn = newHeaders.find(e => e.value === \"Survey\");\r\n        // if (!hasSurveyColumn) {\r\n        //   newHeaders.push(getNewCell({ value: \"Survey\", readOnly: true }));\r\n        // }\r\n        // // set body\r\n        const newRows = body.map(row => {\r\n          const { surveys } = state;\r\n          const tmp = [];\r\n          for (let i = 0; i < newHeaders.length; i++) {\r\n            const isSurvey = newHeaders[i].value === \"Survey\";\r\n            const type = isSurvey ? \"survey\" : \"text\";\r\n            const value = row[i] || (surveys.length ? surveys[0].name : \"\");\r\n            tmp.push(getNewCell({ type, value }));\r\n          }\r\n          return tmp;\r\n        });\r\n  \r\n        return { ...state, headers: newHeaders, rows: newRows };\r\n      }\r\n      case VALIDATE_CELLS: {\r\n        const { headers, rows } = state;\r\n        const newRows = rows.map(row => {\r\n          return row.map((cell, i) => {\r\n            if (headers[i].validate) {\r\n              const isValid = headers[i].validate(cell.value);\r\n              const updatedCell = { ...cell };\r\n              updatedCell.errors = isValid ? [] : [\"Number not valid\"];\r\n              return updatedCell;\r\n            }\r\n            return cell;\r\n          });\r\n        });\r\n        return { ...state, rows: newRows };\r\n      }\r\n      case PARSE_CELLS: {\r\n        const { headers, rows } = state;\r\n        const newRows = rows.map(row => {\r\n          return row.map((cell, i) => {\r\n            if (\r\n              headers[i].parse &&\r\n              Array.isArray(cell.errors) &&\r\n              cell.errors.length === 0\r\n            ) {\r\n              const updatedCell = JSON.parse(JSON.stringify(cell));\r\n              updatedCell.value = headers[i].parse(updatedCell.value);\r\n              return updatedCell;\r\n            }\r\n            return cell;\r\n          });\r\n        });\r\n        return { ...state, rows: newRows };\r\n      }\r\n      // case CREATE_PATIENTS_AND_SEND_SURVEYS: {\r\n  \r\n      // }\r\n      case LIST_SURVEYS: {\r\n        return { ...state, surveys: action.surveys };\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import { combineReducers } from \"redux\"\r\nimport table from \"./reducer\"\r\n\r\nexport default combineReducers({\r\n    table\r\n});\r\n\r\nexport * from \"./reducer\"","/* eslint-disable import/no-anonymous-default-export */\r\nimport { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"../reducers\"\r\n\r\n\r\nconst preloadedState = {}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        composeEnhancers(applyMiddleware(thunk)),\r\n    );   \r\n\r\n    return store;\r\n};","import React from \"react\";\r\n\r\nexport default class TableCellUncontrolled extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: props.value };\r\n  }\r\n\r\n  onChange({ target: { value } }) {\r\n    this.setState({ value });\r\n  }\r\n\r\n  onBlur(e) {\r\n    if (this.props.onChange) {\r\n      this.props.onChange(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const readOnlyClass = this.props.readOnly ? \"read-only\" : \"editable\";\r\n\r\n    return (\r\n      <div key={this.props.id} className={readOnlyClass}>\r\n        <input\r\n          onChange={this.onChange.bind(this)}\r\n          onBlur={this.onBlur.bind(this)}\r\n          value={this.state.value}\r\n          readOnly={this.props.readOnly}\r\n          disabled={this.props.readOnly}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SelectSurvey extends React.Component {\r\n  render() {\r\n    const { surveys } = this.props;\r\n    if (!Array.isArray(surveys) || surveys.length === 0) {\r\n      return \"No surveys created.\";\r\n    }\r\n\r\n    return (\r\n      <select\r\n        onChange={this.props.onChange}\r\n        defaultValue={this.props.defaultValue}\r\n      >\r\n        {surveys.map(survey => (\r\n          <Option label={survey.name} value={survey.name} key={survey.id} />\r\n        ))}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nconst Option = ({ label, value, selected }) => {\r\n  return <option value={value}>{label}</option>;\r\n};\r\n\r\nconst mapStateToProps = ({ table }) => ({\r\n  surveys: table.surveys\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(SelectSurvey);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport UncontrolledCell from \"./CellUncontrolled\";\r\nimport SelectSurvey from \"./SelectSurvey\";\r\n\r\nimport {\r\n  addColumn,\r\n  deleteColumn,\r\n  addRow,\r\n  deleteRow,\r\n  updateCell\r\n} from './../../actions/actions';\r\n\r\nclass Cell extends React.Component {\r\n  state = { lastKey: null, mouseOver: false };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onTab = this.onTab.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onMouseEnter = this.onMouseEnter.bind(this);\r\n    this.onMouseLeave = this.onMouseLeave.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    const value = e.target.value;\r\n    if (this.props.onCellChange) {\r\n      this.props.onCellChange(this.props.row, this.props.column, value);\r\n    }\r\n  }\r\n\r\n  onTab() {\r\n    if (this.props.isLastCell) {\r\n      this.props.onAddRow(this.props.row + 1);\r\n    }\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    if (e.key === \"Tab\" && this.state.lastKey !== \"Shift\") {\r\n      this.onTab();\r\n    }\r\n    this.setState({ lastKey: e.key });\r\n  }\r\n\r\n  onMouseEnter(e) {\r\n    this.setState({ mouseOver: true });\r\n  }\r\n\r\n  onMouseLeave(e) {\r\n    this.setState({ mouseOver: false });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      column,\r\n      row,\r\n      onAddColumn,\r\n      onDeleteColumn,\r\n      onAddRow,\r\n      onDeleteRow,\r\n      readOnly,\r\n      value,\r\n      id,\r\n      type,\r\n      errors,\r\n      isHeader\r\n    } = this.props;\r\n    const { mouseOver } = this.state;\r\n    const showAddColumnBtn = onAddColumn && mouseOver && isHeader;\r\n    const showDeleteColumnBtn =\r\n      onDeleteColumn && !readOnly && mouseOver && isHeader;\r\n    const showAddRowBtn = false && onAddRow && mouseOver && column === 0;\r\n    const showDeleteRowBtn =\r\n      onDeleteRow && mouseOver && column === 0 && !isHeader;\r\n    const hasErrors = Array.isArray(errors) && errors.length > 0;\r\n\r\n    return (\r\n      <div\r\n        key={\"cell\" + id}\r\n        className={\"cell \" + (hasErrors ? \"has-errors\" : \"\")}\r\n        onKeyDown={this.onKeyDown}\r\n        onMouseEnter={this.onMouseEnter}\r\n        onMouseLeave={this.onMouseLeave}\r\n      >\r\n        {type === \"survey\" && (\r\n          <SelectSurvey onChange={this.onChange} defaultValue={value} />\r\n        )}\r\n\r\n        {type === \"text\" && (\r\n          <UncontrolledCell\r\n            id={id}\r\n            readOnly={readOnly}\r\n            value={value}\r\n            onChange={this.onChange}\r\n          />\r\n        )}\r\n\r\n        {showAddColumnBtn && (\r\n          <AddColumn column={column} onAddColumn={onAddColumn} />\r\n        )}\r\n        {showDeleteColumnBtn && (\r\n          <DeleteColumn onDeleteColumn={onDeleteColumn} column={column} />\r\n        )}\r\n        {showDeleteRowBtn && <DeleteRow onDeleteRow={onDeleteRow} row={row} />}\r\n        {showAddRowBtn && <AddRow />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddColumn: addColumn,\r\n  onAddRow: addRow,\r\n  onDeleteColumn: deleteColumn,\r\n  onDeleteRow: deleteRow,\r\n  onCellChange: updateCell\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Cell);\r\n\r\nconst DeleteRow = ({ onDeleteRow, row }) => (\r\n  <div className={\"delete-row\"} onClick={() => onDeleteRow(row)}>\r\n    <IconTimes />\r\n  </div>\r\n);\r\n\r\nconst DeleteColumn = ({ onDeleteColumn, column }) => (\r\n  <div className={\"delete-column\"} onClick={() => onDeleteColumn(column)}>\r\n    <IconTimes />\r\n  </div>\r\n);\r\n\r\nconst AddRow = ({ onAddRow, row }) => (\r\n  <>\r\n    <div className={\"add-row add-row-before\"}>B+</div>\r\n    <div className={\"add-row add-row-after\"}>Af+</div>\r\n  </>\r\n);\r\n\r\nconst AddColumn = ({ onAddColumn, column }) => (\r\n  <>\r\n    <div\r\n      className={\"add-column add-column-before\"}\r\n      onClick={() => onAddColumn(column - 1)}\r\n    >\r\n      <IconPlus />\r\n    </div>\r\n    <div\r\n      className={\"add-column add-column-after\"}\r\n      onClick={() => onAddColumn(column)}\r\n    >\r\n      <IconPlus />\r\n    </div>\r\n  </>\r\n);\r\n\r\nconst IconPlus = () => <>+</>;\r\nconst IconTimes = () => <>x</>;\r\n","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Headers extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={\"header\"}>\r\n        {this.props.headers.map((cell, j) => (\r\n          <Cell {...cell} isHeader={true} key={cell.id} column={j} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ table }) => ({\r\n  headers: table.headers\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Headers);","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\n\r\nconst Row = ({ row, cells, isLastRow }) => {\r\n  return (\r\n    <div className={\"row\"}>\r\n      {cells.length\r\n        ? cells.map((cell, j) => (\r\n            <Cell\r\n              {...cell}\r\n              column={j}\r\n              row={row}\r\n              key={`${row}-${j}`}\r\n              isLastCell={isLastRow && j === cells.length - 1}\r\n            />\r\n          ))\r\n        : \"...\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Row from \"./Row\";\r\n\r\nimport { addRow } from './../../actions/actions';\r\n\r\n\r\n\r\nclass Body extends React.Component {\r\n  render() {\r\n    const { rows } = this.props;\r\n    return (\r\n      <div className={\"body\"}>\r\n        {rows.length &&\r\n          rows.map((cells, i) => (\r\n            <Row\r\n              cells={cells}\r\n              row={i}\r\n              key={\"row-\" + i}\r\n              isLastRow={i === rows.length - 1}\r\n            />\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ table }) => ({\r\n  rows: table.rows\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addRow\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Body);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport XLSX from \"xlsx\";\r\nimport { setTable } from \"../actions/actions\";\r\n\r\nclass ExcelFileInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFile = this.handleFile.bind(this);\r\n  }\r\n  handleFile(file) {\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n    reader.onload = ({ target: { result } }) => {\r\n      const wb = XLSX.read(result, { type: rABS ? \"binary\" : \"array\" });\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\r\n      this.props.setTable(data);\r\n    };\r\n    if (rABS) reader.readAsBinaryString(file);\r\n    else reader.readAsArrayBuffer(file);\r\n  }\r\n  render() {\r\n    return <DataInput handleFile={this.handleFile} />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setTable\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ExcelFileInput);\r\n\r\nclass DataInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.fileInput = React.createRef();\r\n  }\r\n  handleChange(e) {\r\n    const files = e.target.files;\r\n    if (files && files[0]) this.props.handleFile(files[0]);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <button\r\n          style={{ marginLeft: 10 }}\r\n          onClick={() => this.fileInput.current.click()}\r\n        >\r\n          <i className=\"fas fa-upload\" />\r\n          &nbsp; Import File\r\n        </button>\r\n        <input\r\n          ref={this.fileInput}\r\n          type=\"file\"\r\n          hidden\r\n          accept={SheetJSFT}\r\n          onChange={this.handleChange}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst SheetJSFT = [\r\n  \"xlsx\",\r\n  \"xlsb\",\r\n  \"xlsm\",\r\n  \"xls\",\r\n  \"xml\",\r\n  \"csv\",\r\n  \"txt\",\r\n  \"ods\",\r\n  \"fods\",\r\n  \"uos\",\r\n  \"sylk\",\r\n  \"dif\",\r\n  \"dbf\",\r\n  \"prn\",\r\n  \"qpw\",\r\n  \"123\",\r\n  \"wb*\",\r\n  \"wq*\",\r\n  \"html\",\r\n  \"htm\"\r\n]\r\n  .map(function(x) {\r\n    return \".\" + x;\r\n  })\r\n  .join(\",\");\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Headers from \"./Headers\";\r\nimport Body from \"./Body\";\r\nimport ExcelFileInput from \"../../utils\"\r\n\r\n// import { addRow, validateCells } from './../../actions/actions';\r\n\r\nclass Table extends React.Component {\r\n  render() {\r\n    // const { addRow, validateCells } = this.props;\r\n    return (\r\n      <div>\r\n        <div className={\"btn-bar\"}>\r\n          <div>\r\n            {/* <button onClick={() => addRow()}>Add Row</button>\r\n            <button onClick={() => validateCells()}>Validate Table</button> */}\r\n            <ExcelFileInput />\r\n          </div>\r\n        </div>\r\n        <div className={\"table-wrapper\"}>\r\n          <div className={\"table\"}>\r\n            <Headers />\r\n            <Body />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = {\r\n//   addRow,\r\n//   validateCells\r\n// };\r\n\r\nexport default connect(\r\n  null,\r\n//   mapDispatchToProps\r\n)(Table);\r\n","import React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { initialiseTable } from './../../actions/actions';\r\nimport Table from \"../Table/Table\"\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"app\">\r\n                <div className=\"content\">\r\n                    <Table />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    initialiseTable\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(App)","import React from \"react\"\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\"\r\nimport rootStore from \"./store\"\r\nimport App from \"./components/App/App\"\r\n\r\nimport \"./index.css\"\r\n\r\nconst store = rootStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}